services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.9.2
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - apps
    healthcheck:
      test: echo srvr | nc zookeeper 2181 || exit 1
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    hostname: kafka
    container_name: kafka
    image: confluentinc/cp-kafka:7.9.2
    restart: unless-stopped
    environment:
      - KAFKA_BROKER_ID= 1
      - KAFKA_ZOOKEEPER_CONNECT= zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS= PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP= PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME= PLAINTEXT
      - KAFKA_LISTENERS= PLAINTEXT://kafka:29092,PLAINTEXT_HOST://0.0.0.0:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR= 1
      - KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS= 0
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE= true
      - CLUSTER_ID= BQCCanzh6WCe1WKAdt1N
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - apps
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper

  postgres:
    image: postgres:15
    container_name: postgres
    hostname: postgres
    restart: unless-stopped
    networks:
      - apps
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_DB=payments
      - POSTGRES_PASSWORD=local
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  apps:
    name: apps
    driver: bridge
